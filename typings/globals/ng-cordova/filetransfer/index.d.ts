// Generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/14fe4313f4a1cf69add3505a2ab1dbc690dc2116/ng-cordova/fileTransfer.d.ts
declare namespace ngCordova {
    export interface IFileTransferService {
        download(url: string, filePath: string, options?: IFileDownloadOptions, trustAllHosts?: boolean): IFileTransferPromise<FileEntry>;
        upload(url: string, filePath: string, options?: IFileUploadOptions, trustAllHosts?: boolean): IFileTransferPromise<FileUploadResult>;
    }

    export interface IFileTransferPromise<T> extends ng.IPromise<T> {
        then<TResult>(successCallback: (promiseValue: T) => ng.IPromise<TResult> | TResult, errorCallback?: (error: FileTransferError) => ng.IPromise<TResult> | TResult, notifyCallback?: (state: any) => any): ng.IPromise<TResult>;
        catch<TResult>(onRejected: (error: FileTransferError) => ng.IPromise<TResult> | TResult): ng.IPromise<TResult>;
    }

    export interface IFileDownloadOptions extends FileDownloadOptions {
        encodeURI?: boolean;
        timeout?: number;
    }

    export interface IFileUploadOptions extends FileUploadOptions {
        encodeURI?: boolean;
         timeout?: number;
    }
}